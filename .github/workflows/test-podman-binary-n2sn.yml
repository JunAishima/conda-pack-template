name : test_podman_binary_n2sn

on:
  pull_request:

jobs:
  generate_conda_packd_envs:
    name: n2sn conda-pack'd env with Python build using podman as the docker binary ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7"]
      fail-fast: false

    steps:
      - name: Set env.REPOSITORY_NAME  # just the repo, as opposed to org/repo
        shell: bash -l {0}
        run: |
          export REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}
          echo "REPOSITORY_NAME=${REPOSITORY_NAME}" >> $GITHUB_ENV

      - name: Set secrets
        shell: bash -l {0}
        run: |
          export ZENODO_ACCESS_TOKEN=${{ secrets.ZENODO_ACCESS_TOKEN }}
          echo "ZENODO_ACCESS_TOKEN=${ZENODO_ACCESS_TOKEN}" >> $GITHUB_ENV

      - name: Set non-secret environment variables
        shell: bash -l {0}
        run: |
          # ZENODO_OWNER_ID is an integer number corresponding to the sandbox
          # account with the token above, that is used to upload files, and to
          # search by the owner id.
          export ZENODO_OWNER_ID="40261"  # mrakitin's owner id on sandbox.zenodo.org
          export DOCKER_BINARY="podman"
          echo "ZENODO_OWNER_ID=${ZENODO_OWNER_ID}" >> $GITHUB_ENV
          echo "DOCKER_BINARY=${DOCKER_BINARY}" >> $GITHUB_ENV

      - name: checkout the code
        uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ env.REPOSITORY_NAME }}
          auto-update-conda: true
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}

      - name: pip-install dependencies
        shell: bash -l {0}
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          python3 -m pip install -r requirements.txt

      - name: pip-install dev-dependencies
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          python3 -m pip install -r requirements-dev.txt

      - name: add podman to the environment
        shell: bash -l {0}
        run: |
          conda install podman -c conda-forge

      - name: check env
        shell: bash -l {0}
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          conda info
          conda env list
          conda list
          pip list
          conda config --show-sources
          conda config --show
          printenv | sort

      - name: render n2sn config
        shell: bash -l {0}
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          python3 render.py -c configs/n2sn.yml -f Dockerfile.j2
          python3 render.py -c configs/n2sn.yml -f runner.sh.j2
          ls -la
          cat ./Dockerfile
          cat ./runner-n2sn.sh

      - name: run a build with Docker
        shell: bash -l {0}
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          bash ./runner-n2sn.sh
          ls -laF
          sudo chown -v $USER: artifacts/*
          ls -laF artifacts/
          cat artifacts/*-sha256sum.txt artifacts/*-md5sum.txt
