name : test_render_all

on:
  push:
  pull_request:

jobs:
  render_all_configs:
    name: render all configs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7"]
      fail-fast: false

    steps:
      - name: Set env.REPOSITORY_NAME  # just the repo, as opposed to org/repo
        shell: bash -l {0}
        run: |
          export REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}
          echo "REPOSITORY_NAME=${REPOSITORY_NAME}" >> $GITHUB_ENV

      - name: checkout the code
        uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ env.REPOSITORY_NAME }}
          auto-update-conda: true
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}

      - name: pip-install dependencies
        shell: bash -l {0}
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          python3 -m pip install -r requirements.txt

      - name: pip-install dev-dependencies
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          python3 -m pip install -r requirements-dev.txt

      - name: check env
        shell: bash -l {0}
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          conda info
          conda env list
          conda list
          pip list
          conda config --show-sources
          conda config --show
          printenv | sort

      - name: render all configs
        shell: bash -l {0}
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail

          onestep_dir="1-step"
          twostep_dir="2-step"
          mkdir -v ${onestep_dir} ${twostep_dir}

          # Run a 1-step rendering:
          ./scripts/render-all.sh oneshot
          ls -la
          mv -v Dockerfile runner-*.sh ${onestep_dir}

          # Run a 2-step rendering:
          ./scripts/render-all.sh
          ls -la
          mv -v Dockerfile runner-*.sh ${twostep_dir}

          # Compare the files:
          for f1 in $(ls -1 ${onestep_dir}/*); do
              f2="${twostep_dir}/$(basename $f1)"
              echo "Comparing ${f1} vs. ${f2}"
              diff ${f1} ${f2}
          done
