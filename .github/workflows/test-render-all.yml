name : test_render_all

on:
  # push:
  pull_request:

jobs:
  render_all_configs:
    name: render all configs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7"]
      fail-fast: false

    steps:
      - name: checkout the code
        uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ env.REPOSITORY_NAME }}
          auto-update-conda: true
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}

      - name: pip-install dependencies
        shell: bash -l {0}
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          python3 -m pip install -r requirements.txt

      - name: pip-install dev-dependencies
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          python3 -m pip install -r requirements-dev.txt

      - name: check env
        shell: bash -l {0}
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          conda info
          conda env list
          conda list
          pip list
          conda config --show-sources
          conda config --show
          printenv | sort

      - name: render all configs
        shell: bash -l {0}
        run: |
          # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
          set -vxeuo pipefail
          for f in $(ls -1 configs/*.yml); do
              echo $f
              python3 render.py -c ${f} -f Dockerfile.j2
              python3 render.py -c ${f} -f runner.sh.j2
              cat Dockerfile
              cat runner-$(echo $(basename ${f}) | awk -F. '{print $1}').sh
          done
          ls -la
